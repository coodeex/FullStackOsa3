{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","personObject","post","id","delete","changedPerson","put","Filter","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","handleDeleteClick","persons","newFilter","filter","person","name","toLowerCase","indexOf","map","key","number","onClick","Message","message","addedStyle","color","colour","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","messageColor","setMessageColor","useEffect","personService","then","response","data","catch","error","console","log","handleNumberUpdate","p","status","setTimeout","event","target","preventDefault","some","find","window","confirm","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca90443b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (personObject) => {\r\n  return axios.post(baseUrl, personObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, changedPerson) => {\r\n  return axios.put(`${baseUrl}/${id}`, changedPerson)\r\n}\r\n\r\n\r\n\r\nexport default { \r\n  getAll,\r\n  create,\r\n  deletePerson,\r\n  update\r\n}","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filter shown with\n      <input\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nconst PersonForm = ({ addName, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={addName}>\n      <div> name:\n        <input\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>number:\n        <input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ handleDeleteClick, persons, newFilter }) => {\n  return (\n    <ul>\n      {persons.filter(person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1).map(person =>\n        <li key={person.name}>\n          {person.name} {person.number}\n          <button type=\"submit\" onClick={() => handleDeleteClick(person)}>delete</button>\n        </li>\n      )}\n    </ul>\n  )\n}\n\nconst Message = ({ message, colour }) => {\n  const addedStyle = {\n    color: colour,\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={addedStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageColor, setMessageColor] = useState()\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n      .catch(error => console.log(error))\n  }, [message])\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    if (persons.some(person => person.name === newName)) {\n      const person = persons.find(p => p.name===newName)\n      if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n        handleNumberUpdate(person)\n      }\n    }else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(personObject)\n        .then(() => {\n          setPersons(persons.concat(personObject))\n        })\n        .catch(error => {\n          setMessageColor('red')\n          setMessage(error.response.data.error)\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n      setMessageColor('green')\n      setMessage(`Added ${newName}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 4000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNumberUpdate = (person) => {\n    const changedPerson = { ...person, number: newNumber }\n\n    personService\n      .update(person.id, changedPerson)\n      .then(response => {\n        setPersons(persons.map(p => p.id !== person.id ? p : response.data))\n      })\n      .catch(error => {\n        console.log(error.response)\n        setMessageColor('red')\n        if (error.response.status === 400) {\n          setMessage(error.response.data.error)\n        }else{\n          setMessage(`Information of ${changedPerson.name} has already removed from server`)\n        }\n        setTimeout(() => {\n          setMessage(null)\n        }, 4000)\n      })\n    setMessageColor('green')\n    setMessage(`Replaced the number of ${changedPerson.name} with a new one`)\n    setTimeout(() => {\n      setMessage(null)\n    }, 4000)\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n  const handleDeleteClick = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .deletePerson(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.name !== person.name))\n        })\n        .catch(error => {\n          setMessageColor('red')\n          setMessage(`Too fast! Error occured while deleting ${person.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n      setMessageColor('green')\n      setMessage(`Deleted ${person.name}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 4000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} colour={messageColor} />\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons handleDeleteClick={handleDeleteClick} persons={persons} newFilter={newFilter} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}